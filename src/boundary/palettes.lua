local Palettes = {}
Palettes.current = 1
local alien = false

Palettes [1] = {
    {0x25, 0x29, 0x1c},
    {0x98, 0x9c, 0x94},
    {0xbd, 0xc2, 0xbf},
    {0xe6, 0xe4, 0x9f},
    {0xe3, 0xe7, 0xd3}
}

Palettes [2] = {
    {0x0b, 0x48, 0x6b},
    {0x3b, 0x86, 0x86},
    {0x79, 0xbd, 0x9a},
    {0xa8, 0xdb, 0xa8},
    {0xcf, 0xf0, 0x9e},
}

Palettes [3] = {
    {0x1c, 0x05, 0x26},
    {0x31, 0x0f, 0x3f},
    {0x8d, 0x47, 0xaa},
    {0xb6, 0x6d, 0xd6},
    {0xe2, 0xcf, 0xea}
}

Palettes [4] = {
    {0x86, 0x16, 0x57},
    {0xa5, 0x42, 0x7c},
    {0xd6, 0x6b, 0xa9},
    {0xdb, 0xb3, 0xca},
    {0xfc, 0xcc, 0xe8}
}

Palettes [5] = {
    {0x02, 0x02, 0x02},
    {0x21, 0x3d, 0x0c},
    {0x52, 0xbf, 0x00},
    {0xaf, 0xfc, 0x74},
    {0xd3, 0xf9, 0xb5}
}

Palettes [6] = {
    {0x33, 0x18, 0x32},
    {0xd8, 0x1e, 0x5b},
    {0xf0, 0x54, 0x4f},
    {0xc6, 0xd8, 0xd3},
    {0xfd, 0xf0, 0xd5}
}

Palettes [7] = {
    {0x5d, 0x57, 0x6b},
    {0xed, 0x6a, 0x5a},
    {0x9b, 0xc1, 0xbc},
    {0xf4, 0xf1, 0xbb},
    {0xe6, 0xeb, 0xe0}
}

Palettes [8] = {
    {0x1e, 0x38, 0x88},
    {0x9c, 0x38, 0x48},
    {0x47, 0xa8, 0xbd},
    {0xff, 0xad, 0x69},
    {0xf5, 0xe6, 0x63}
}

Palettes [9] = {
    {0x3a, 0x08, 0x42},
    {0x39, 0x14, 0x63},
    {0x2d, 0x93, 0x6c},
    {0xbf, 0xae, 0x48},
    {0x5f, 0xad, 0x41}
}

Palettes [10] = {
    {0x23, 0x25, 0x28},
    {0x2a, 0x2a, 0x72},
    {0x00, 0x9f, 0xfd},
    {0xff, 0xa4, 0x00},
    {0xea, 0xf6, 0xff}
}

--[[
Palettes [2] = {
    {0x, 0x, 0x},
    {0x, 0x, 0x},
    {0x, 0x, 0x},
    {0x, 0x, 0x},
    {0x, 0x, 0x}
}
--]]

function Palettes.nextPalette (shader)
    Palettes.current = Palettes.current + 1
    if Palettes.current > #Palettes then
        Palettes.current = 1
    end

    Palettes.loadPalette (shader, Palettes.current)
end

function Palettes.loadPalette (shader, index)
    if not alien then
        for i=1, #Palettes [1] do
            shader:sendColor ("col" .. i, Palettes [index or 1] [i])
        end
    else
        for i=1, #Palettes [1] do
            shader:sendColor ("col" .. i, Palettes [index or 1] [#Palettes [1] - i + 1])
        end
    end
end

return Palettes
